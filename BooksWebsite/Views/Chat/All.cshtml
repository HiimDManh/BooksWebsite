
@{
    ViewBag.Title = "Phòng chat";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="~/assets/css/chatbox.css" rel="stylesheet" />
<!--begin::Chat-->
<div class="d-flex flex-row">
    <!--begin::Content-->
    <div class="flex-row-fluid ml-lg-8" id="kt_chat_content">
        <!--begin::Card-->
        <div class="card card-custom" id="khungChat">
            <!--begin::Header-->
            <div class="card-header align-items-center px-4 py-3">

                <div class="text-center flex-grow-1">
                    <div class="text-dark-75 font-weight-bold font-size-h5" id="nameGroupChat">Phòng Chat Cộng Đồng</div>
                    <div>
                        <span class="label label-sm label-dot label-success"></span>
                        <span class="font-weight-bold text-muted font-size-sm"></span>
                    </div>
                </div>

            </div>
            <!--end::Header-->
            <!--begin::Body-->
            <div class="card-body">
                <!--begin::Scroll-->
                <div class="scroll scroll-pull" id="scroll" data-mobile-height="350">
                    <!--begin::Messages-->
                    <div class="messages">

                        <!--end::Message Out-->

                    </div>
                    <!--end::Messages-->
                </div>
                <!--end::Scroll-->
            </div>
            <!--end::Body-->
            <!--begin::Footer-->
            <div class="card-footer align-items-center">
                <!--begin::Compose-->
                <textarea class="form-control border-0 p-0" rows="2" placeholder="Nhập tin nhắn" id="msg"></textarea>
                <div class="d-flex align-items-center justify-content-between mt-5">
                    <div class="mr-3">
                        @*<a href="#" class="btn btn-clean btn-icon btn-md mr-1">
                                <i class="flaticon2-photograph icon-lg"></i>
                            </a>
                            <a href="#" class="btn btn-clean btn-icon btn-md">
                                <i class="flaticon2-photo-camera icon-lg"></i>
                            </a>*@
                    </div>
                    <div>
                        <button type="button" id="send" class="btn btn-primary btn-md text-uppercase font-weight-bold chat-send py-2 px-6">Send</button>
                    </div>
                </div>
                <!--begin::Compose-->
            </div>
            <!--end::Footer-->
        </div>
        <!--end::Card-->
    </div>
    <!--end::Content-->
</div>
<!--end::Chat-->
@section scripts{
    @*<script src="~/assets/js/pages/custom/chat/chat.js"></script>*@
    <script>
        $('#chattingall').addClass('menu-item-active')
    </script>
    <script>
        ShowInfoChat()
        $(document).on('keydown', '#msg', function (e) {
            if (event.key === 'Enter') {
                e.preventDefault();
                var msg = $('#msg').val()
                sendPrivateMessage(msg)
            }
        })
        //hiểm thị thông tin msg với người liên hệ
        function ShowInfoChat() {
            $.ajax({
                url: '/Chat/InfoChatAll',
                type: 'get',
                success: function (data) {
                    if (data.code === 200) {
                        $('.messages').empty();
                        var div = ``;
                        $.each(data.data, function (k, v) {
                            let avatarUrl = '/User/GetAvatarID?userId=' + encodeURIComponent(v.Sender);
                            div += `<div class="d-flex flex-column mb-5 align-items-${(v.IsMyMessage ? `end` : `start`)}">
                                     <div class="d-flex align-items-center">
                                         <div class="symbol symbol-circle symbol-40 mr-3">
                                             <img alt="Pic" src="${avatarUrl}" />
                                         </div>
                                         <div>
                                             <a class="text-dark-75 text-hover-primary font-weight-bold font-size-h6">${v.Sender} </a>
                                             <span class="text-muted font-size-sm">${Math.floor(v.CreateDate)} min</span>
                                         </div>
                                     </div>
                                     <div class="mt-2 rounded p-5 bg-light-${(v.IsMyMessage ? `success` : `primary`)} text-dark-50 font-weight-bold font-size-lg text-left max-w-400px">${v.Message}</div>
                                 </div>`
                        });
                        $('.messages').append(div)
                        scrollToBottom()
                    } else {

                    }
                },
                error: function () {

                }
            })
        }
    </script>

    <script>
        var username = "";
        let socket = null;
        connectWebSocket()
        function connectWebSocket() {
            socket = new WebSocket("ws://localhost:8181");

            // Xử lý sự kiện khi WebSocket mở
            socket.onopen = () => {
                username = $('#accountCurrent').text(); // Lấy username từ DOM
                if (username === "") {
                    socket.close(); // Ngắt kết nối
                    return; // Thoát để thử kết nối lại thông qua onclose
                }
                console.log("Kết nối WebSocket thành công! " + username);
                socket.send(`REGISTER|${username}`); // Gửi lệnh đăng ký
                socket.send(`JOIN_ROOM|NCCD`); // Gửi lệnh đăng ký
            };

            // Xử lý sự kiện đóng kết nối
            socket.onclose = (event) => {
                console.warn("WebSocket đã bị đóng: ", event.reason);
                setTimeout(() => {
                    connectWebSocket(); // Thử kết nối lại
                }, 500); // Thử lại sau 3 giây
            };
            // Xử lý sự kiện nhận tin nhắn
            socket.onmessage = (event) => {
                const message = event.data; // Lấy dữ liệu từ tin nhắn
                console.log("Tin nhắn nhận được: ", message);

                // Thực hiện logic xử lý tin nhắn
                handleMessage(message);
            };
            // Xử lý lỗi WebSocket
            socket.onerror = (error) => {
                console.error("Lỗi WebSocket: ", error);
            };
        }
        // Hàm xử lý tin nhắn
        function handleMessage(message) {
            const parts = message.split('|');
            const command = parts[0];
            const payload = parts.length > 1 ? parts[1] : null;

            switch (command) {
                case "ROOM_MESSAGE":
                    if (parts.length >= 4) {
                        const sender = parts[2];
                        const recipient = parts[1];
                        const privateMessage = parts[3];
                        if (recipient === "NCCD" || sender == username) {
                            ShowInfoChat()
                            scrollToBottom()
                        }
                        //if (sender == "SERVER") {
                        //    toastr.success(privateMessage);
                        //}

                    }
                    break;

                default:
                    console.warn("Unknown command: ", command);
                    break;
            }
        }
        $(document).on('click', '#send', function () {
            var msg = $('#msg').val()
            sendPrivateMessage(msg)
        })
        function sendPrivateMessage(message) {
            if (username != "") {

                const command = `ROOM_MESSAGE|NCCD|${message}`;
                socket.send(command);
                $('#msg').val('')
            } else {
                console.log("Chưa có người ddeeer gửi");
            }
        }
        //lướt cuối
        function scrollToBottom() {
            var element = document.getElementById('scroll');
            element.scrollTop = element.scrollHeight;
        }

    </script>
}